========================================================================
            PROJECT : Ambient Fixture Project Specifications
========================================================================

This is an on-going document where I can specify the requirements of various projects. Write the spec first and then do the TDD.

Purpose: To study various aspects of ambient fixtures such as: voice command/feedback, how to create a personality, how to maintain the retention of viewer and how to create various kinetic motions such as: grace, excitement, fear, surprise, calmness, sorrow. These ambient fixtures can be summed up by saying that I am studying the intersection of: utility, playfulness and art: all embodied an the ambient fixture (as observed by Stephen).

How To Use This Document: This documents provides a way of crystalizing the ambient fixture in words. The first step, in using this document, is to create a kinetic mockup which allows you to judge whether to proceed further with the ambient fixture. The second step is to use the TDD approach to building the first real version of the ambient fixture.


Sky & Cloud (pi@study-rpi)
===========

Purpose: To study how to achieve graceful moves and provide some useful information. The ambient fixture will gesture wind condition at a specific location.

Requirement for Alexa/Google
--------------------------------------------------------
- takes voice command and send it to Alexa or Google.
- acknowledges the command to the user by voice.
- Alexa or Google processes the command and returns a specific text command.
- needs for the viewer to be able to select the city.

Requirement for Gcode Scores
--------------------------------------------------------
- takes a text command and selects the correct gcode score.
- score is a text file with gcode lines (\r\n after each line).
- scores are indexed in a Python dictionary with the score's name:filename.
- scores are stored in flash as text files.

Requirement for Gcode Conductor
--------------------------------------------------------
- looks at a score and sends the next gcode line to the appropriate gcode streamer.
- can handles a multitude of gcode streamers in parallel.

Requirement for Gcode Streamer
--------------------------------------------------------
- streamer is invoked when a gcode sequence is given.
- streamer does not hesitate between points.
- streamer uses the feedback from Grbl for flowcontrol.
- first cut: streamers use serial communication.
- second cut: streamers use i2c.


Charlie Brown & Kite Eating Tree (pi@cbk-rpi)
================================

Purpose: To study how to grab a viewers attention and maintain it through a personality and also provide useful information. The ambient fixture will show the wind conditions in a city.

Requirement for Gcode Streamer
--------------------------------------------------------
- needs to provide quick movements that mimick arm gestures of the tree.

Requirement for various displays
--------------------------------------------------------
- small display shows text of the location that it's monitoring.
- small display horizontally scrolls to provide additional information.
- large display shows animating eyes coordinated with a script.

Requirement for Background LED
--------------------------------------------------------
- needs to produce various lighting conditions: daytime, nighttime, stormy, sunny.

Requirement for Person Detection
--------------------------------------------------------
- able to detect when a viewer is looking at this ambient fixture, so it can initiated with the person or with another CBK ambient fixture.

Requirement for Script
--------------------------------------------------------
- need a state machine to handle various scripts that one ambient fixture is engaged with another ambient fixture or with a viewer.


Weather Balloon (pi@wb-rpi)
================================

Purpose: 

Requirement for
--------------------------------------------------------
- 
